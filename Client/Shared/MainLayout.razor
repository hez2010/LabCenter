@inherits LayoutComponentBase

@if (DeviceProvider.IsMobile)
{
    <BFUPanel IsOpen="isPanelOpened" IsLightDismiss="true" OnDismiss="() => isPanelOpened = false">
        <BFUStack>
            <BFUStackItem Align="Alignment.Center">
                <BFUText Variant="TextType.XLarge">实验室助理中心</BFUText>
            </BFUStackItem>
            <BFUStackItem>
                <NavMenu />
            </BFUStackItem>
        </BFUStack>
    </BFUPanel>
    <div style="position: absolute; right: 0; top: 0; padding: 20px">
        <BFUActionButton IconName="NumberedListText" OnClick="NavMenu_Clicked">菜单</BFUActionButton>
    </div>
    <div style="padding: 0 20px">
        <RoutedContent />
    </div>
}
else
{
    <BFUStack Horizontal="true">
        <BFUStackItem VerticalFill="true" Style="min-width: 250px">
            <BFUStack>
                <BFUStackItem Align="Alignment.Center">
                    <BFUText Variant="TextType.XLarge">实验室助理中心</BFUText>
                </BFUStackItem>
                <BFUStackItem>
                    <NavMenu />
                </BFUStackItem>
            </BFUStack>
        </BFUStackItem>
        <BFUStackItem VerticalFill="true" Tokens="desktopTokens">
            <RoutedContent />
        </BFUStackItem>
    </BFUStack>
}

@code {
    [Inject] private IDeviceProvider DeviceProvider { get; set; } = default!;

    private bool isPanelOpened;

    private readonly BFUStackItemTokens desktopTokens = new BFUStackItemTokens
    {
        Padding = new CssValue("0 0 0 20px")
    };

    private void NavMenu_Clicked(MouseEventArgs args)
    {
        isPanelOpened = !isPanelOpened;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await DeviceProvider.InitAysnc();
        DeviceProvider.PropertyChanged += (sender, args) =>
        {
            if (args.PropertyName == nameof(DeviceProvider.IsDesktop))
            {
                StateHasChanged();
            }
        };
    }
}
